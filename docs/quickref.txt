Pyth is a compact programming language in polish (prefix) notation. It has three
data types:

 - real, a real number
 - str, a string of characters
 - list, an ordered list of elements

Lines that start with ";" are comments. Whitespace followed by ";" means that
the rest of the line is a comment. Lines starting with ";#" are meta-commands.
There is one valid meta command as of now:

    ;# end
    Everything after this line is ignored by the interpreter, except
    meta-commands.

The interpreter ignores an even amount of spaces at the start of the line - you
can use this to indent. This is purely for aesthetics.

We will use the following typenames in the docs - these aren't concrete types,
they're names for a set of types:

 - seq: str, list

In multi-character Pyth string literals (") there are only two escape sequences:

    \\ becomes regular backslash
    \" becomes a single quote

All other characters like newlines, tabs, etc must (and can) be directly
embedded in string literals.

0123456789 are used in numeric literals. A leading zero is a separate token, so
*01 is actually 0 * 1.

A lot of functions can have less arguments than their arity. This is done
through the closing symbols ) and ;. Pyth automatically closes every symbol
that's still left open at the end of the file - this is not an error.

Now comes a listing of every Pyth symbol. Column by column it respectively
contains the symbol, the arity (U is unbounded, S is special), the mnemonic and
a description. In the description we will use a, b, etc as respectively the
first, second, etc parameter.

   0 blank     Seperates tokens and surpresses printing.
\n 0 newline   Seperates tokens without surpressing printing.
 ! 1 not       Python not. Returns real: False -> 0, True -> 1.
 " 0 str       String literal.
 #
 $
 %
 &
 '
 (
 ) S close     Closes one open symbol or block. E.g.: [) becomes [] in Python.
 * 2 times     Python *. On real/seq or seq/real truncate real beforehand.
               Cartesian product on seq/seq.
 + 2 plus      On both same type, Python +.
               On any/list or list/any respectively prepend/append.
               On real/str or str/real convert to str and concatenate.
               On single real argument, absolute value. No argument is inf.
 , 2 pair      Equivalent to Python [a, b].
 - 2 minus     On real/real, Python -.
               On single real, negative absolute value. No argument is -inf.
 /
 :
 ; S close-all Closes all open symbols and blocks. Infinite ).
 <
 =
 >
 ?
 @
 [ U list      Unbounded list literal. Close with ).
 \ 0 one-str   One-character string literal.
 ] 1 one-list  Equivalent to Python [a].
 ^
 _
 `
 {
 |
 }
 ~
 a
 b
 c
 d
 e
 f
 g
 h
 i
 j
 k
 l
 m
 n
 o
 p
 q
 r
 s
 t
 u
 v
 w
 x
 y
 z
 A
 B
 C
 D
 E
 F
 G
 H
 I
 J
 K
 L
 M
 N
 O
 P
 Q
 R
 S
 T
 U
 V
 W
 X
 Y
 Z
.!
."
.#
.$
.%
.&
.'
.(
.)
.*
.+
.,
.-
./
.:
.;
.<
.=
.>
.?
.@
.[
.\
.]
.^
._
.`
.{
.|
.}
.~
.a
.b
.c
.d
.e
.f
.g
.h
.i
.j
.k
.l
.m
.n
.o
.p
.q
.r
.s
.t
.u
.v
.w
.x
.y
.z
.A
.B
.C
.D
.E
.F
.G
.H
.I
.J
.K
.L
.M
.N
.O
.P
.Q
.R
.S
.T
.U
.V
.W
.X
.Y
.Z
